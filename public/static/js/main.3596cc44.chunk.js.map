{"version":3,"sources":["services/APIservice.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["API_URL","NotesCard","props","title","content","id","className","NotesForm","useState","setTitle","setContent","error","setError","style","display","onSubmit","evt","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","addNote","console","log","handleNoteAdded","catch","e","type","placeholder","onChange","target","value","defaultValue","App","notes","setNotes","fetchNotes","useEffect","map","notesObj","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mLAAMA,GCAS,I,MDAC,6B,OEKVC,EAAY,SAACC,GACjB,IAAQC,EAAuBD,EAAvBC,MAAOC,EAAgBF,EAAhBE,QAAgBF,EAAPG,GAMxB,OACE,sBAAKC,UAAU,OAAf,UACE,+BAAM,4BAAIH,MACV,4BAAIC,QAMJG,EAAY,SAACL,GAEjB,MAA0BM,mBAAS,IAAnC,mBAAOL,EAAP,KAAcM,EAAd,KACA,EAA8BD,mBAAS,IAAvC,mBAAOJ,EAAP,KAAgBM,EAAhB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAkBA,OACE,8BACE,uBAAMC,MAAO,CAAEC,QAAS,eAAiBC,SAlBxB,SAACC,GACpBA,EAAIC,iBFjBe,SAACd,EAAOC,GAC7B,OAAOc,MAAM,GAAD,OAAIlB,EAAJ,UAAqB,CAC/BmB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEpB,QAAOC,cAC7BoB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UEWjBC,CAAQxB,EAAOC,GACZoB,MAAK,SAAAC,GACJG,QAAQC,IAAIJ,GACZvB,EAAM4B,kBACNrB,EAAS,IACTC,EAAW,IACXE,EAAS,OAEVmB,OAAM,SAAAC,GACLJ,QAAQjB,MAAMqB,GACdpB,EAAS,wCAMX,UACE,uBAAOqB,KAAK,OAAOC,YAAY,QAAQ5B,UAAU,QAAQ6B,SAAU,SAAAH,GAAC,OAAIvB,EAASuB,EAAEI,OAAOC,QAAQC,aAAcnC,IAChH,0BAAU8B,KAAK,OAAOC,YAAY,UAAU5B,UAAU,QAAQ6B,SAAU,SAAAH,GAAC,OAAItB,EAAWsB,EAAEI,OAAOC,QAAQC,aAAclC,IACvH,uBAAO6B,KAAK,SAASK,aAAa,YAAYhC,UAAU,UACxD,mBAAGA,UAAU,QAAb,SACGK,UAwCI4B,MAhCf,WACE,MAA0B/B,mBAAS,IAAnC,mBAAOgC,EAAP,KAAcC,EAAd,KAEMC,EAAa,WF1DZxB,MAAM,GAAD,OAAIlB,EAAJ,UAAqB,CAC/BmB,OAAQ,MACRC,QAAS,CACP,eAAgB,sBAEjBI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UEsDNF,MAAK,SAAAgB,GACdZ,QAAQC,IAAIW,GACZC,EAASD,OAQb,OAJAG,qBAAU,WACRD,MACE,IAGF,sBAAKpC,UAAU,MAAf,UACE,cAAC,EAAD,CAAWwB,gBAAiBY,IAC5B,qBAAKpC,UAAU,GAAf,SAEIkC,EAAMI,KAAI,SAAAC,GAAQ,OAAI,cAAC,EAAD,CAEpBzC,QAASyC,EAASzC,QAClBD,MAAO0C,EAAS1C,MAChBE,GAAIwC,EAASxC,IAHRwC,EAASxC,aClEXyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.3596cc44.chunk.js","sourcesContent":["const API_URL = 'http://localhost:3000/api'\n\nexport const getNotes = () => {\n  return fetch(`${API_URL}/notes`, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    }\n  }).then(res => res.json())\n}\n\nexport const addNote = (title, content) => {\n  return fetch(`${API_URL}/notes`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ title, content })\n  }).then(res => res.json())\n}","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { addNote, getNotes } from './services/APIservice'\n\nconst NotesCard = (props) => {\n  const { title, content, id } = props;\n\n  const handleDelete = () => {\n    // deleteNote(id).then(props.onDelete);\n  };\n\n  return (\n    <div className=\"card\">\n      <span><b>{title}</b></span>\n      <p>{content}</p>\n      {/* <button onClick={handleDelete} className=\"card-button\">Delete</button> */}\n    </div>\n  )\n}\n\nconst NotesForm = (props) => {\n\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [error, setError] = useState('');\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    addNote(title, content)\n      .then(res => {\n        console.log(res)\n        props.handleNoteAdded();\n        setTitle('')\n        setContent('')\n        setError('')\n      })\n      .catch(e => { \n        console.error(e)\n        setError('Error occurred while adding note')\n      })\n  };\n\n  return (\n    <div>\n      <form style={{ display: 'inline-grid' }} onSubmit={handleSubmit}>\n        <input type=\"text\" placeholder=\"Title\" className=\"input\" onChange={e => setTitle(e.target.value)} defaultValue={title} />\n        <textarea type=\"text\" placeholder=\"Content\" className=\"input\" onChange={e => setContent(e.target.value)} defaultValue={content} />\n        <input type=\"Submit\" defaultValue=\"Add Notes\" className=\"input\" />\n        <p className=\"error\">\n          {error}\n        </p>\n      </form>\n    </div>\n  )\n};\n\n\nfunction App() {\n  const [notes, setNotes] = useState([])\n\n  const fetchNotes = () => {\n    getNotes().then(notes => { \n      console.log(notes)\n      setNotes(notes)\n    })\n  }\n\n  useEffect(() => {\n    fetchNotes()\n  },  [])\n\n  return (\n    <div className=\"App\">\n      <NotesForm handleNoteAdded={fetchNotes}/>\n      <div className=\"\">\n        {\n          notes.map(notesObj => <NotesCard\n            key={notesObj.id}\n            content={notesObj.content}\n            title={notesObj.title}\n            id={notesObj.id}\n            // onDelete={getNotes}\n          />)\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}